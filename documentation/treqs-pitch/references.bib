
@Article{Kasauli2020b,
  author  = {Rashidah Kasauli and Eric Knauss and Jennifer Horkoff and Grischa Liebel and Francisco Gomes de Oliveira Neto},
  title   = {Requirements engineering challenges and practices in large-scale agile system development},
  journal = {Systems and Software},
  year    = {2020},
  doi     = {10.1016/j.jss.2020.110851},
}

@Article{Pelliccione2017,
  author   = {Patrizio Pelliccione and Eric Knauss and Rogardt Heldal and S. Magnus {\r A}gren and Mallozzi Piergiuseppe and Anders Alminger and Daniel Borgentun},
  title    = {Automotive Architecture Framework: the experience of Volvo Cars},
  journal  = {Journal of systems architecture},
  year     = {2017},
  issn     = {1383-7621},
  abstract = {The automotive domain is living an extremely challenging historical moment shocked by many emerging business and technological needs. Electrication, autonomous driving, and connected cars are some of the driving needs in this changing world. Increasingly, vehicles are becoming software-intensive complex systems and most of the innovation within the automotive industry is based on electronics and software. Modern vehicles can have over 100 Electronic Control Units (ECUs), which are small computers, together executing gigabytes of software. ECUs are connected to each other through several networks within the car, and the car is increasingly connected with the outside world. These novelties ask for a change on how the software is engineered and produced and for a disruptive renovation of the electrical and software architecture of the car. In this paper we describe the current investigation of Volvo Cars to create an architecture framework able to cope with the complexity and needs of present and future vehicles. Specically, we present scenarios that describe demands for the architectural framework and introduce three new viewpoints that need to be taken into account for future architectural decisions: Continuous Integration and Deployment, Ecosystem and Transparency, and car as a constituent of a System of Systems. Our results are based on a series of focus groups with experts in automotive engineering and architecture from dierent companies and universities.},
  doi      = {10.1016/j.sysarc.2017.02.005},
  keywords = {Architecture Framework, Software architecture, Automotive domain, Systems of Systems, Continuous Integration and Deployment, Automotive ecosystem},
}

@Article{Liebel2016,
  author    = {Grischa Liebel and Matthias Tichy and Eric Knauss and Oscar Ljungkrantz and Gerald Stieglbauer},
  title     = {Organisation and Communication Problems in Automotive Requirements Engineering},
  journal   = {Requirements Engineering Journal (REEN)},
  year      = {2016},
  abstract  = {Project success in the automotive industry is highly influenced by Requirements Engineering (RE), for which communication and organisation structure play a major role, much due to the scale and distribution of these projects. However, empirical research is scarce on these aspects of automotive RE and warrants closer examination.


Therefore, the purpose of this paper is to identify problems or challenges in automotive RE with respect to communication and organisation structure. Using a multiple-case study approach, we collected data via 14 semi-structured interviews at one car manufacturer and one supplier. We tested our findings from the case study with a questionnaire distributed to practitioners in the automotive industry. Our results indicate that it is difficult but increasingly important to establish communication channels outside the fixed organisation structure and that responsibilities are often unclear. Product knowledge during early requirements elicitation and context knowledge later on is lacking. Furthermore, abstraction gaps between requirements on different abstraction levels leads to inconsistencies.


For academia, we formulate a concrete agenda for future research. Practitioners can use the findings to broaden their understanding of how the problems manifest and to improve their organisations.},
  comment   = {GUP code 243899},
  doi       = {10.1007/s00766-016-0261-7},
  file      = {:papers/Liebel2016.pdf:PDF},
  keywords  = {Challenges; Problems; Organisation; Communication; Automotive Requirements Engineering},
  owner     = {knauss},
  timestamp = {2016-10-24},
}

@InProceedings{KPH+2016,
  author    = {Eric Knauss and Patrizio Pelliccione and Rogardt Heldal and Magnus {\r A}gren and Sofia Hellman and Daniel Maniette},
  title     = {Continuous Integration Beyond the Team: A Tooling Perspective on Challenges in the Automotive Industry},
  booktitle = {Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM '16)},
  year      = {2016},
  address   = {Ciudad Real, Spain},
  publisher = {ACM},
  abstract  = {The practice of Continuous Integration (CI) has a big impact on how
	software is developed today. Shortening integration and feedback
	cycles promises to increase software quality, feature throughput,
	and customer satisfaction. Thus, it is not a surprise that companies
	try to embrace CI in domains where it is rather difficult to implement.
	
	In this paper we present our findings from two rounds of interviews
	with a car manufacturer on the use of tools in system engineering
	and how these tools would support wider adoption of CI. Our findings
	suggest a complex tool landscape with immense requirements that are
	not easily fulfilled by existing tools; this holds also for tools
	that well support CI in other domains. From this notion, we fur-
	ther explore what makes the automotive domain challeng- ing when
	it comes to CI (namely complexity of system and value chain). We
	hope that our findings will help address such challenges.},
  comment   = {GUP code: 242511},
  doi       = {10.1145/2961111.2962639},
  file      = {KPH+2016.pdf:papers/KPH+2016.pdf:PDF},
  keywords  = {continuous integration, automotive systems engineering},
  owner     = {eknauss},
  timestamp = {2016.09.28},
}

@Article{Knauss2019,
  author   = {Eric Knauss},
  title    = {The missing requirements perspective in large-scale agile system development},
  journal  = {IEEE Software},
  year     = {2019},
  volume   = {36},
  number   = {3},
  pages    = {9--13},
  month    = may,
  abstract = {Recent developments in agile methods at scale and continuous delivery have successfully removed major bottlenecks that have, so far, limited the speed at which software can be developed, delivered, and evaluated by customers and end users. Now, the ability to manage requirements and related knowledge in continuous software engineering has become a limiting factor.},
  doi      = {10.1109/MS.2019.2896875},
  file     = {:papers/Knauss2019.pdf:PDF},
  keywords = {requirements engineering, large-scale agile, systems engineering},
  url      = {https://doi.org/10.1109/MS.2019.2896875},
}

@InProceedings{Knauss2018a,
  author    = {Eric Knauss and Grischa Liebel and Jennifer Horkoff and Rebekka Wohlrab and Rashidah Kasauli and Filip Lange and Pierre Gildert},
  title     = {T-Reqs: Tool Support for Managing Requirements in Large-Scale Agile System Development},
  booktitle = {Proceedings of 26th IEEE International Requirements Engineering Conference (RE'18)},
  year      = {2018},
  pages     = {502--503},
  address   = {Banff, Canada},
  note      = {Tool Demo},
  doi       = {10.1109/re.2018.00073},
  url       = {http://arxiv.org/abs/1805.02769},
}

